package org.example.bot.commands

import org.telegram.telegrambots.extensions.bots.commandbot.commands.BotCommand
import org.telegram.telegrambots.meta.api.methods.groupadministration.GetChatAdministrators
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.Chat
import org.telegram.telegrambots.meta.api.objects.User
import org.telegram.telegrambots.meta.bots.AbsSender

class HelpCommand : BotCommand("help", "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥") {

    override fun execute(sender: AbsSender, user: User, chat: Chat, arguments: Array<String>) {
        val userId = user.id
        val chatId = chat.id.toString()

        val isPrivate = chat.isUserChat
        val isGroup = chat.isGroupChat || chat.isSuperGroupChat

        var isAdminInGroup = false
        if (isGroup) {
            try {
                val admins = sender.execute(GetChatAdministrators(chatId))
                isAdminInGroup = admins.any { it.user.id == userId }
            } catch (_: Exception) {}
        }

        val helpText = buildString {
            appendLine("üìñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n")

            // üìå –û–±—â–∏–µ
            appendLine("‚ñ∂Ô∏è `/start` ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")
            appendLine("üÜò `/help` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é")

            // üîî –ü–æ–¥–ø–∏—Å–∫–∏
            appendLine("\nüîî *–ü–æ–¥–ø–∏—Å–∫–∏:*")
            appendLine("‚ûï `/subscribe <group>` ‚Äî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≥—Ä—É–ø–ø–µ")
            appendLine("‚ûñ `/unsubscribe <group>` ‚Äî –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ –≥—Ä—É–ø–ø–µ")
            appendLine("üìã `/my_subscriptions` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏")
            appendLine("üõ°Ô∏è `/my_chats` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Ç—ã, –≥–¥–µ –≤—ã –∞–¥–º–∏–Ω –∏ –±–æ—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

            if (isGroup && isAdminInGroup) {
                appendLine("üë• `/subscribe_all` ‚Äî –ü–æ–¥–ø–∏—Å–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —ç—Ç–æ–≥–æ —á–∞—Ç–∞ (üõ°Ô∏è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
            } else if (isPrivate) {
                appendLine("üë• `/subscribe_all <—Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É>` ‚Äî –ü–æ–¥–ø–∏—Å–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã (üõ°Ô∏è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
            }

            // üì¶ –ì—Ä—É–ø–ø—ã
            appendLine("\nüì¶ *–ì—Ä—É–ø–ø—ã:*")
            if (isPrivate) {
                appendLine("‚ûï `/create_group <group> ; <–æ–ø–∏—Å–∞–Ω–∏–µ>` ‚Äî –°–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É")
                appendLine("‚ùå `/delete_group <group>` ‚Äî –£–¥–∞–ª–∏—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É")
            }
            appendLine("üìÉ `/list_groups` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã")

            // üß© –®–∞–±–ª–æ–Ω—ã
            if (isPrivate) {
                appendLine("\nüß© *–®–∞–±–ª–æ–Ω—ã:*")
                appendLine("üìÉ `/list_templates` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã")
//              appendLine("‚ûï `/add_template <—Ç–∏–ø> ; <–∫–∞–Ω–∞–ª> ; <—Ç–µ–∫—Å—Ç>` ‚Äî –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω") // –æ—Ç–∫–ª—é—á–µ–Ω–æ
            }

            // üöÄ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            appendLine("\nüöÄ *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:*")
            appendLine("‚ö° `/notify_immediate <CALL|MR|RELEASE> <—Å—Å—ã–ª–∫–∞> <–º–µ—Å—Ç–æ> <–≤—Ä–µ–º—è> <–æ–ø–∏—Å–∞–Ω–∏–µ> <chat|private> <–≥—Ä—É–ø–ø–∞>` ‚Äî –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞")
            appendLine("‚è∞ `/notify_schedule <CALL|MR|RELEASE> <—Å—Å—ã–ª–∫–∞> <–º–µ—Å—Ç–æ> <–≤—Ä–µ–º—è> <–æ–ø–∏—Å–∞–Ω–∏–µ> <–¥–∞—Ç–∞> <–≤—Ä–µ–º—è> <–ø–æ–≤—Ç–æ—Ä—ã –≤ –õ–°> <–ø–æ–≤—Ç–æ—Ä—ã –≤ —á–∞—Ç> <–∏–Ω—Ç–µ—Ä–≤–∞–ª> [–≥—Ä—É–ø–ø–∞]` ‚Äî –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        }

        sender.execute(
            SendMessage(chatId, helpText).apply {
                parseMode = "Markdown"
            }
        )
    }
}
