package org.example.bot.commands

import org.example.storage.service.GroupService
import org.example.storage.service.SubscriptionService
import org.example.storage.service.UserService
import org.telegram.telegrambots.extensions.bots.commandbot.commands.BotCommand
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.Chat
import org.telegram.telegrambots.meta.api.objects.User
import org.telegram.telegrambots.meta.bots.AbsSender

class CreateGroupCommand(
    private val groupService: GroupService,
    private val subscriptionService: SubscriptionService,
    private val userService: UserService
) : BotCommand("create_group", "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É") {

    override fun execute(sender: AbsSender, user: User, chat: Chat, arguments: Array<String>) {
        val chatId = chat.id.toString()

        if (arguments.isEmpty()) {
            sender.execute(
                SendMessage(chatId, "–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:\n\n`/create_group <–≥—Ä—É–ø–ø–∞> ; <–æ–ø–∏—Å–∞–Ω–∏–µ>`").apply {
                    parseMode = "Markdown"
                }
            )
            return
        }

        val fullInput = arguments.joinToString(" ")
        val parts = fullInput.split(";", limit = 2)

        val groupName = parts[0].trim()
        val description = if (parts.size > 1) parts[1].trim() else ""

        if (groupName.isEmpty()) {
            sender.execute(SendMessage(chatId, "‚ùóÔ∏è–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."))
            return
        }

        val existingGroup = groupService.findByName(groupName, chatId, null)
        if (existingGroup != null) {
            sender.execute(SendMessage(chatId, "‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '$groupName' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º —á–∞—Ç–µ."))
            return
        }

        val dbUser = userService.resolveUser(user)

        val newGroup = groupService.createGroup(
            name = groupName,
            chatId = chatId,
            description = description,
            isPrivate = false,
            owner = dbUser,
            allowedUsers = emptySet()
        )

        // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞
        subscriptionService.subscribe(dbUser, newGroup)

        println("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞ '${newGroup.name}' –≤ —á–∞—Ç–µ $chatId –≤–ª–∞–¥–µ–ª—å—Ü–µ–º ${dbUser.username}")
        sender.execute(
            SendMessage(chatId, """
                ‚úÖ –ì—Ä—É–ø–ø–∞ '${newGroup.name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.
                ‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: $description
                üë§ –í–ª–∞–¥–µ–ª–µ—Ü: ${dbUser.username}
            """.trimIndent())
        )
    }
}
