//package org.example.bot.commands
//
//import org.example.storage.model.*
//import org.example.storage.repository.*
//import org.springframework.stereotype.Component
//import org.telegram.telegrambots.extensions.bots.commandbot.commands.BotCommand
//import org.telegram.telegrambots.meta.api.methods.send.SendMessage
//import org.telegram.telegrambots.meta.api.objects.Chat
//import org.telegram.telegrambots.meta.api.objects.User as TelegramUser
//import org.telegram.telegrambots.meta.bots.AbsSender
//import java.time.LocalDateTime
//
//@Component
//class TestScheduleCommand(
//    private val userRepository: UserRepository,
//    private val templateRepository: TemplateRepository,
//    private val eventRepository: EventRepository,
//    private val scheduledNotificationRepository: ScheduledNotificationRepository
//) : BotCommand("test_schedule", "–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ") {
//
//    override fun execute(sender: AbsSender, user: TelegramUser, chat: Chat, arguments: Array<String>) {
//        // 1. –ù–∞–π—Ç–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//        val dbUser = userRepository.findByTelegramId(user.id)
//            ?: userRepository.save(
//                User(
//                    telegramId = user.id,
//                    chatId = chat.id.toString(),
//                    username = user.userName ?: "unknown"
//                )
//            )
//
//        // 2. –°–æ–∑–¥–∞—ë–º —à–∞–±–ª–æ–Ω
//        val template = templateRepository.save(
//            Template(
//                eventType = EventType.CALL,
//                text = "–ü—Ä–∏–≤–µ—Ç, {{username}}! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.",
//                channel = Channel.PRIVATE
//            )
//        )
//
//        // 3. –°–æ–∑–¥–∞—ë–º —Å–æ–±—ã—Ç–∏–µ
//        val event = eventRepository.save(
//            Event(
//                type = EventType.CALL, // üëà –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
//                payload = mapOf("username" to dbUser.username)
//            )
//        )
//
//        // 4. –°–æ–∑–¥–∞—ë–º ScheduledNotification —Å—Ä–∞–∑—É —Å –Ω—É–∂–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
//        val scheduled = ScheduledNotification(
//            template = template,
//            event = event,
//            eventTime = LocalDateTime.now().plusSeconds(10),
//            repeatCount = 1,
//            targetUsers = setOf(dbUser) // ‚úÖ –ø–µ—Ä–µ–¥–∞—ë–º Set –Ω–∞–ø—Ä—è–º—É—é
//        )
//
//        scheduledNotificationRepository.save(scheduled)
//
//        // 5. –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
//        sender.execute(
//            SendMessage(chat.id.toString(), "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥.")
//        )
//    }
//}
