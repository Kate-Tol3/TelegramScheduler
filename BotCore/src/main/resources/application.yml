bot:
  token: ${TELEGRAM_BOT_TOKEN}
  username: ${TELEGRAM_BOT_USERNAME}

server:
  port: ${BOT_SERVER_PORT}

spring:
  main:
    allow-bean-definition-overriding: true

  datasource:
    url: ${BOT_DATASOURCE_URL}
    username: ${BOT_DATASOURCE_USERNAME}
    password: ${BOT_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${BOT_KAFKA_BOOTSTRAP}
    consumer:
      group-id: bot-consumer-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    org.springframework.kafka: INFO
    org.example.bot: DEBUG
